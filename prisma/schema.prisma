generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String         @id @unique
  username String         @unique
  email    String         @unique
  bio      String?
  Session  Session[]
  Key      Key[]
  Victories Game[]
  Games    Game[]         @relation("playersInGame")
  Actions  Action[]       @relation("actionByPlayer")
  Cards    CardInstance[] @relation("cardOwnedByPlayer")
  Messages Message[]      @relation("messageByPlayer")
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  expires         BigInt?
  auth_user       User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Game {
  id            String   @id @unique @default(uuid())
  created_at    DateTime @default(now())
  ongoing       Boolean  @default(true)
  currentPlayer Boolean  @default(true) // true -> P1 ; false -> P2
  victory       String?
  user_won      User?    @relation(fields: [victory], references: [id])
  Players       User[]   @relation("playersInGame")
  Actions       Action[] @relation("actionInGame")
}

model Action {
  id    String @id @unique
  game  Game   @relation("actionInGame", fields: [id], references: [id])
  owner User   @relation("actionByPlayer", fields: [id], references: [id])
  instance    CardInstance @relation("actionsOnCard", fields: [id], references: [id])
  destination String // "hand" | "cemetery" | "x;y"
}

model CardInstance {
  id       String   @id @unique
  card     String
  owner    User     @relation("cardOwnedByPlayer", fields: [id], references: [id])
  position String // "hand" | "cemetery" | "x;y"
  actions  Action[] @relation("actionsOnCard")
}

model Message {
  id       String   @id @unique
  room     String
  user_id  String
  author   User     @relation("messageByPlayer", fields: [user_id], references: [id])
  content  String 
  created_at DateTime @default(now())
}